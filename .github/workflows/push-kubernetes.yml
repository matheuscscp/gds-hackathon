name: Push Kubernetes

on:
  push:
    branches: [main]
    paths:
    - kubernetes/**
    - .github/workflows/push-kubernetes.yml

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # for OIDC authentication with Azure and OCI artifact signing with cosign

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: 6e2abcff-d678-4ed2-9615-d30e000993e1
        tenant-id: 4bd9a3a0-4393-4c05-ab26-77f6c0bfc693
        subscription-id: db1051fa-ca70-4fed-a721-637b2621c974

    - name: Get ACR credentials
      id: get-acr-credentials
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "ACR_ACCESS_TOKEN=$(az acr login --name gdshackathon --expose-token --output tsv --query accessToken)" >> "$GITHUB_OUTPUT"
          echo "ACR_LOGIN_SERVER=$(az acr login --name gdshackathon --expose-token --output tsv --query loginServer)" >> "$GITHUB_OUTPUT"

    - name: Login to ACR
      uses: docker/login-action@v3
      with:
        registry: ${{ steps.get-acr-credentials.outputs.ACR_LOGIN_SERVER }}
        username: 00000000-0000-0000-0000-000000000000
        password: ${{ steps.get-acr-credentials.outputs.ACR_ACCESS_TOKEN }}

    - name: Setup Flux
      uses: controlplaneio-fluxcd/distribution/actions/setup@main

    - name: Setup cosign
      uses: sigstore/cosign-installer@v3

    - name: Push Kubernetes OCI Artifact
      uses: controlplaneio-fluxcd/distribution/actions/push@main
      id: push
      with:
        repository: gdshackathon.azurecr.io/kubernetes
        path: kubernetes
        diff-tag: latest

    - name: Sign OCI Artifact
      if: steps.push.outputs.pushed == 'true'
      run: cosign sign --yes $DIGEST_URL
      env:
        DIGEST_URL: ${{ steps.push.outputs.digest-url }}
